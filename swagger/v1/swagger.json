{
  "openapi": "3.0.1",
  "info": {
    "title": "Peep API V1",
    "version": "v1"
  },
  "paths": {
    "/appointments": {
      "get": {
        "summary": "Retrieves a set of appointments",
        "tags": [
          "appointments"
        ],
        "responses": {
          "200": {
            "description": "appointments set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create an appointment record",
        "tags": [
          "appointments"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "appointment created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appointment": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "integer"
                      },
                      "client_id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "lines_attributes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "staff_id": {
                              "type": "integer"
                            },
                            "staff_name": {
                              "type": "integer"
                            },
                            "service_id": {
                              "type": "integer"
                            },
                            "client_id": {
                              "type": "integer"
                            },
                            "service_name": {
                              "type": "integer"
                            },
                            "price_name": {
                              "type": "string"
                            },
                            "price": {
                              "type": "number"
                            },
                            "original_price": {
                              "type": "number"
                            },
                            "starts_at": {
                              "type": "string"
                            },
                            "ends_at": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{id}": {
      "get": {
        "summary": "show details of a appointment",
        "tags": [
          "appointments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "appointments data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "appointments not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete appointment",
        "tags": [
          "appointments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "appointments data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "appointment not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "checkout an appointment ",
        "tags": [
          "checkout appointments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "checkout completed",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appointment": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "integer"
                      },
                      "client_id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "lines_attributes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "appointment_id": {
                              "type": "integer"
                            },
                            "staff_id": {
                              "type": "integer"
                            },
                            "staff_name": {
                              "type": "integer"
                            },
                            "service_id": {
                              "type": "integer"
                            },
                            "service_name": {
                              "type": "integer"
                            },
                            "price_name": {
                              "type": "string"
                            },
                            "price": {
                              "type": "number"
                            },
                            "original_price": {
                              "type": "number"
                            },
                            "starts_at": {
                              "type": "string"
                            },
                            "ends_at": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "payments_attributes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "appointment_id": {
                              "type": "integer"
                            },
                            "payment_type_id": {
                              "type": "integer"
                            },
                            "amount": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "appointments/check_hints": {
      "put": {
        "summary": "check appointment hints",
        "tags": [
          "appointments"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "show hint",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "hint not found",
            "content": {
            }
          }
        }
      }
    },
    "/blocked_times": {
      "get": {
        "summary": "Retrieves a set of blocked_times",
        "tags": [
          "blocked_times"
        ],
        "responses": {
          "200": {
            "description": "blocked_times set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a blocked_time record",
        "tags": [
          "blocked_times"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "blocked_time created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "blocked_time": {
                    "type": "object",
                    "properties": {
                      "starts_at": {
                        "type": "string"
                      },
                      "ends_at": {
                        "type": "string"
                      },
                      "staff_id": {
                        "type": "integer"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocked_times/{id}": {
      "get": {
        "summary": " single blocked_time data",
        "tags": [
          "blocked_times"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "blocked_time data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "blocked_time not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete blocked_time object",
        "tags": [
          "blocked_times"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "blocked_time data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "blocked_time not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a blocked_time record",
        "tags": [
          "blocked_times"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "blocked_time updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "blocked_time": {
                    "type": "object",
                    "properties": {
                      "starts_at": {
                        "type": "string"
                      },
                      "ends_at": {
                        "type": "string"
                      },
                      "staff_id": {
                        "type": "integer"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cancellation_reasons": {
      "get": {
        "summary": "Retrieves a set of cancellation_reasons",
        "tags": [
          "cancellation_reasons"
        ],
        "responses": {
          "200": {
            "description": "cancellation_reasons set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a cancellation_reason record",
        "tags": [
          "cancellation_reasons"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "cancellation_reason created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellation_reason": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cancellation_reasons/{id}": {
      "get": {
        "summary": "Retrieves data of cancellation_reasons",
        "tags": [
          "cancellation_reasons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancellation_reason data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "cancellation_reason not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete a cancellation_reasons",
        "tags": [
          "cancellation_reasons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancellation_reason deleted",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "cancellation_reason not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a cancellation_reason record",
        "tags": [
          "cancellation_reasons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "cancellation_reason updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellation_reason": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients": {
      "get": {
        "summary": "Retrieves a set of clients",
        "tags": [
          "clients"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "clients set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a client record",
        "tags": [
          "clients"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "client created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "notify_method": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "gender": {
                        "type": "integer"
                      },
                      "birthday": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "global_notes": {
                        "type": "boolean"
                      },
                      "street": {
                        "type": "string"
                      },
                      "suburb": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "summary": "Retrieves a set of clients",
        "tags": [
          "clients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "client data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "client not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "Retrieves a set of clients",
        "tags": [
          "clients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "client data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "client not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a client record",
        "tags": [
          "clients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "client updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "notify_method": {
                        "type": "string"
                      },
                      "language": {
                        "type": "string"
                      },
                      "gender": {
                        "type": "integer"
                      },
                      "birthday": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "global_notes": {
                        "type": "boolean"
                      },
                      "street": {
                        "type": "string"
                      },
                      "suburb": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "postal_code": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/closing_shifts": {
      "get": {
        "summary": "Retrieves a set of closing_shifts",
        "tags": [
          "closing_shifts"
        ],
        "responses": {
          "200": {
            "description": "closing_shifts set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a shift record",
        "tags": [
          "closing_shifts"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "shift created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shift": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "integer"
                      },
                      "starts_at": {
                        "type": "string"
                      },
                      "ends_at": {
                        "type": "string"
                      },
                      "staff_id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/closing_shifts/{id}": {
      "get": {
        "summary": " single shift data",
        "tags": [
          "closing_shifts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "shift data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "shift not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete shift object",
        "tags": [
          "closing_shifts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "shift data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "shift not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a shift record",
        "tags": [
          "closing_shifts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "shift updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shift": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "integer"
                      },
                      "starts_at": {
                        "type": "string"
                      },
                      "ends_at": {
                        "type": "string"
                      },
                      "staff_id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice_sequences": {
      "get": {
        "summary": "Retrieves a set of invoice_sequences",
        "tags": [
          "invoice_sequences"
        ],
        "responses": {
          "200": {
            "description": "invoice_sequences set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a invoice_sequence record",
        "tags": [
          "invoice_sequences"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "invoice_sequence created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_sequence": {
                    "type": "object",
                    "properties": {
                      "location_id": {
                        "type": "integer"
                      },
                      "location_name": {
                        "type": "string"
                      },
                      "num_prefix": {
                        "type": "string"
                      },
                      "next_num": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice_sequences/{id}": {
      "get": {
        "summary": "Retrieves data of invoice_sequences",
        "tags": [
          "invoice_sequences"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "invoice_sequence data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "invoice_sequence not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete a invoice_sequences",
        "tags": [
          "invoice_sequences"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "invoice_sequence deleted",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "invoice_sequence not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a invoice_sequence record",
        "tags": [
          "invoice_sequences"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "invoice_sequence updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoice_sequence": {
                    "type": "object",
                    "properties": {
                      "location_id": {
                        "type": "integer"
                      },
                      "location_name": {
                        "type": "string"
                      },
                      "num_prefix": {
                        "type": "string"
                      },
                      "next_num": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "Retrieves a set of locations",
        "tags": [
          "locations"
        ],
        "responses": {
          "200": {
            "description": "locations set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a location record",
        "tags": [
          "locations"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "location created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "business_type": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "building": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": " single location data",
        "tags": [
          "locations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "location data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "location not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete location object",
        "tags": [
          "locations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "location data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "location not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a location record",
        "tags": [
          "locations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "location updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "business_type": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "building": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment_types": {
      "get": {
        "summary": "Retrieves a set of payment_types",
        "tags": [
          "payment_types"
        ],
        "responses": {
          "200": {
            "description": "payment_types set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a payment_type record",
        "tags": [
          "payment_types"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "payment_type created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_type": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payment_types/{id}": {
      "get": {
        "summary": "Retrieves data of payment_types",
        "tags": [
          "payment_types"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "payment_type data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "payment_type not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete a payment type",
        "tags": [
          "payment_types"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "payment_type deleted",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "payment_type not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a payment_type record",
        "tags": [
          "payment_types"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "payment_type updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_type": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_categories": {
      "get": {
        "summary": "Retrieves a set of service categories",
        "tags": [
          "service_categories"
        ],
        "responses": {
          "200": {
            "description": "service_categories set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a service category record",
        "tags": [
          "service_categories"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "service category created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service_category": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "appointment_color": {
                        "type": "string"
                      },
                      "description": {
                        "type": "text"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service_categories/{id}": {
      "get": {
        "summary": "show details of service category",
        "tags": [
          "service_categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "service_categories data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "service_categories not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete service category member",
        "tags": [
          "service_categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "service_categories data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "service category not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a service category record",
        "tags": [
          "service_categories"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "service category updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service_category": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "appointment_color": {
                        "type": "string"
                      },
                      "description": {
                        "type": "text"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "Retrieves a set of services",
        "tags": [
          "services"
        ],
        "responses": {
          "200": {
            "description": "services set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a service record",
        "tags": [
          "services"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "service created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "treatment_type_id": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "text"
                      },
                      "available_for": {
                        "type": "integer"
                      },
                      "staff_commission": {
                        "type": "string"
                      },
                      "extra_time": {
                        "type": "boolean"
                      },
                      "extra_time_type": {
                        "type": "integer"
                      },
                      "extra_time_duration": {
                        "type": "integer"
                      },
                      "service_prices_attributes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "duration": {
                              "type": "integer"
                            },
                            "pricing_type": {
                              "type": "integer"
                            },
                            "price": {
                              "type": "number"
                            },
                            "special_price": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{id}": {
      "get": {
        "summary": "show details of a service",
        "tags": [
          "services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "services data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "services not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete service",
        "tags": [
          "services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "services data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "service not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a service record",
        "tags": [
          "services"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "service updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "treatment_type_id": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "text"
                      },
                      "available_for": {
                        "type": "integer"
                      },
                      "staff_commission": {
                        "type": "boolean"
                      },
                      "extra_time": {
                        "type": "boolean"
                      },
                      "extra_time_type": {
                        "type": "integer"
                      },
                      "extra_time_duration": {
                        "type": "integer"
                      },
                      "service_prices_attributes": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "service_id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "duration": {
                              "type": "integer"
                            },
                            "pricing_type": {
                              "type": "integer"
                            },
                            "price": {
                              "type": "number"
                            },
                            "special_price": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shifts": {
      "get": {
        "summary": "Retrieves a set of shifts",
        "tags": [
          "shifts"
        ],
        "responses": {
          "200": {
            "description": "shifts set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a shift record",
        "tags": [
          "shifts"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "shift created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shift": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "integer"
                      },
                      "starts_at": {
                        "type": "string"
                      },
                      "ends_at": {
                        "type": "string"
                      },
                      "staff_id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shifts/{id}": {
      "get": {
        "summary": " single shift data",
        "tags": [
          "shifts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "shift data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "shift not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete shift object",
        "tags": [
          "shifts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "shift data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "shift not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a shift record",
        "tags": [
          "shifts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "shift updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shift": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "integer"
                      },
                      "starts_at": {
                        "type": "string"
                      },
                      "ends_at": {
                        "type": "string"
                      },
                      "staff_id": {
                        "type": "integer"
                      },
                      "location_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/staffs": {
      "get": {
        "summary": "Retrieves a set of staffs",
        "tags": [
          "staffs"
        ],
        "responses": {
          "200": {
            "description": "staffs set",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          }
        }
      },
      "post": {
        "summary": "create a staff record",
        "tags": [
          "staffs"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "staff created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "staff": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "booking_enabled": {
                        "type": "boolean"
                      },
                      "booking_color": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "contract_start": {
                        "type": "string"
                      },
                      "contract_end": {
                        "type": "string"
                      },
                      "service_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "location_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/staffs/{id}": {
      "get": {
        "summary": "show details of staff member",
        "tags": [
          "staffs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "staffs data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "staffs not found",
            "content": {
            }
          }
        }
      },
      "delete": {
        "summary": "delete staff member",
        "tags": [
          "staffs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "staffs data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "staff not found",
            "content": {
            }
          },
          "442": {
            "description": "can not be deleted",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a staff record",
        "tags": [
          "staffs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "staff updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "staff": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "booking_enabled": {
                        "type": "boolean"
                      },
                      "booking_color": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "contract_start": {
                        "type": "string"
                      },
                      "contract_end": {
                        "type": "string"
                      },
                      "service_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "location_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "show details of user",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user data",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "404": {
            "description": "users not found",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "update a user record",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user updated",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "password_confirmation": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "business_type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "create a user record",
        "tags": [
          "users"
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "user created",
            "content": {
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
            }
          },
          "442": {
            "description": "bad data or breaks validation ",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "password_confirmation": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "business_type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}